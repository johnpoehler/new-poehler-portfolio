{
  "hash": "49ae099c7c3639fb216c7c6d5d311256",
  "result": {
    "markdown": "---\ntitle: \"Exploratory Data Analysis: EDA\"\nauthor: \"John Poehler\"\ndate: \"2023-08-18\"\ncategories: [R, EDA, analysis]\nimage: \"exploratory-data-analysis.jpg\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressMessages(library(dplyr))\nlibrary(dplyr)\nNBA<-read.csv(\"nbastatz1.csv\",header=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNBA[NBA==\"\"]<-NA\nNBA$Pos <- replace(NBA$Pos,NBA$Pos == \"G-F\",\"G\")\nNBA$Pos <- replace(NBA$Pos,NBA$Pos == \"F-G\",\"F\")\nNBA$Pos <- replace(NBA$Pos,NBA$Pos == \"C-F\",\"C\")\nNBA$Pos <- replace(NBA$Pos,NBA$Pos == \"F-C\",\"F\")\nNBA$Player[NBA$Player == \"Jos\\xe9 Calder\\xf3n\"]<- \"Jose Calderon\"\nNBA$Player[NBA$Player == \"Manu Gin\\xf3bili\"]<- \"Manu Ginobili\"\nNBA$Player[NBA$Player == \"Hedo T\\xfcrko?lu\"]<- \"Hedo Turkoglu\"\nNBA$Player[NBA$Player == \"Nen\\xea\"]<- \"Nene\"\n```\n:::\n\n\n# **Now, we'll check the for the correlation between the variables.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumNBA<- NBA[c('WS','Age','G','MP','FG','FGA','X2P','X2PA','X3P','X3PA','FT','FTA','ORB','DRB','TRB','AST','STL','BLK','TOV','PF','PTS','FG.','X2P.','X3P.','FT.','TS.','eFG.','Win.','Win','Loss','Champ.')]\nlibrary(reshape2)\ncorrelation_matrix<-round(cor(numNBA),2)\nmelt_corr_mat<-melt(correlation_matrix)\nlibrary(ggplot2)\nggplot(data = melt_corr_mat, aes(x=Var1, y=Var2, fill= value)) + geom_tile(width= 1, colour = \"white\") + \n  scale_fill_gradient(low = \"white\", high = \"steelblue\")+geom_text(aes(Var2, Var1, label = value),\n          color = \"black\", size = 2) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + ggtitle(\"Numeric Variable Heat Map\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n# **It's time for some Exploratory Data Analysis!**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(NBA, aes(x = WS)) + geom_histogram(color=\"black\",fill=\"purple\")+ geom_vline(aes(xintercept = min(WS)), color = \"red\") +\n  geom_vline(aes(xintercept = max(WS)), color = \"green\")+ geom_vline(aes(xintercept = mean(WS)), color = \"yellow\") + geom_vline(aes(xintercept = median(WS)), color = \"blue\")+\n    ggtitle(\"Win Shares Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Pos, y = WS)) + geom_boxplot(fill=\"purple\")+ ggtitle(\"Win Shares vs Position\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Team, y = WS)) + geom_boxplot(fill=\"red\")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code}\nteam_counts <- NBA %>%\n  group_by(Team) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count))\n\nggplot(team_counts, aes(x = reorder(Team, -count), y = count)) + geom_bar(stat = \"identity\", fill = \"blue\", color = \"black\") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + ggtitle(\"Count of Top 1000 per Team\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-4.png){width=672}\n:::\n\n```{.r .cell-code}\nteam_mean_win_shares <- NBA %>%\n  group_by(Team) %>%\n  summarise(mean_win_shares = mean(WS)) %>%\n  arrange(desc(mean_win_shares))\nggplot(team_mean_win_shares, aes(x = reorder(Team, -mean_win_shares), y = mean_win_shares)) +\n  geom_bar(stat = \"identity\", fill = \"#66FF99\", color = \"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win Shares per Team\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-5.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Team, y = WS)) +\n  stat_summary(fun = mean, geom = \"bar\", fill = \"#66FF99\", color=\"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of WS per Team\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-6.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Season)) +\n  geom_bar(color= \"black\" ,fill=\"purple\") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+ ggtitle(\"Win Shares vs Season\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbestNBA <- NBA[NBA$Player %in% c(\"Karl Malone\", \"Chris Paul\", \"LeBron James\", \"John Stockton\", \"Tim Duncan\", \"Hakeem Olajuwon\", \"Reggie Miller\", \"Charles Barkley\", \"Dirk Nowitzki\", \"Kobe Bryant\", \"David Robinson\", \"Kevin Garnett\", \"Magic Johnson\", \"Michael Jordan\", \"Moses Malone\", \"Damian Lillard\", \"Gary Payton\", \"James Harden\"), ]\n\nplayer_counts <- bestNBA %>%\n  group_by(Player) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count))\n\nggplot(player_counts, aes(x = reorder(Player, -count), y = count)) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"556B2F\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Number of Appearances vs Player\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\n  ggplot(bestNBA, aes(x = Player)) +\n  geom_bar(color= \"black\" ,fill=\"556B2F\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Win Shares vs Player\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n```{.r .cell-code}\n  player_mean_win_shares <- bestNBA %>%\n  group_by(Player) %>%\n  summarise(mean_win_shares = mean(WS)) %>%\n  arrange(desc(mean_win_shares))\n\nbestNBA <- merge(bestNBA, player_mean_win_shares, by = \"Player\")\n\nggplot(bestNBA, aes(x = reorder(Player, -mean_win_shares), y = WS)) +\n  geom_boxplot(fill = \"red\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Win Shares vs Player\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(bestNBA, aes(x = Player, y = WS)) +\n  geom_boxplot(fill=\"red\")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + ggtitle(\"Win Shares vs Player\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-5.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Win.)) + geom_histogram(color=\"black\",fill=\"#99CC33\")+ geom_vline(aes(xintercept = min(Win.)), color = \"red\") +\n  geom_vline(aes(xintercept = max(Win.)), color = \"green\")+ geom_vline(aes(xintercept = mean(Win.)), color = \"yellow\") + geom_vline(aes(xintercept = median(Win.)), color = \"blue\")+\n    ggtitle(\"Win% Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-6.png){width=672}\n:::\n\n```{.r .cell-code}\nteam_mean_win_percent <- NBA %>%\n  group_by(Team) %>%\n  summarise(mean_win_percent = mean(Win.)) %>%\n  arrange(desc(mean_win_percent))\n\nggplot(team_mean_win_percent, aes(x = reorder(Team, -mean_win_percent), y = mean_win_percent)) +\n  geom_bar(stat = \"identity\", fill = \"#cc6600\", color = \"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win% per Team\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-7.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Team, y = Win.)) +\n  stat_summary(fun = mean, geom = \"bar\", fill = \"#cc6600\", color=\"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win% per Team\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-8.png){width=672}\n:::\n\n```{.r .cell-code}\nplayer_mean_win_percent <- bestNBA %>%\n  group_by(Player) %>%\n  summarise(mean_win_percent = mean(Win.)) %>%\n  arrange(desc(mean_win_percent))\nggplot(player_mean_win_percent, aes(x = reorder(Player, -mean_win_percent), y = mean_win_percent)) +\n  geom_bar(stat = \"identity\", fill = \"#cc6600\", color = \"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win% per Player\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-9.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(bestNBA, aes(x = Player, y = Win.)) +\n  stat_summary(fun = mean, geom = \"bar\", fill = \"#cc6600\", color=\"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win% per Player\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-10.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = MP)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ geom_vline(aes(xintercept = min(MP)), color = \"red\") +\n  geom_vline(aes(xintercept = max(MP)), color = \"green\")+ geom_vline(aes(xintercept = mean(MP)), color = \"yellow\") + geom_vline(aes(xintercept = median(MP)), color = \"blue\")+\n    ggtitle(\"MP Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-11.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = FG)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ geom_vline(aes(xintercept = min(FG)), color = \"red\") +\n  geom_vline(aes(xintercept = max(FG)), color = \"green\")+ geom_vline(aes(xintercept = mean(FG)), color = \"yellow\") + geom_vline(aes(xintercept = median(FG)), color = \"blue\")+\n    ggtitle(\"FGA Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-12.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = FGA)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FGA Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-13.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = X2P)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"2P Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-14.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = X2PA)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"2PA Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-15.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = X3P)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"3P Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-16.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = X3PA)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"3PA Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-17.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = FT)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FT Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-18.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = FTA)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FTA Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-19.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = ORB)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"ORB Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-20.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = DRB)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"DRB Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-21.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = TRB)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"TRB Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-22.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = AST)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"AST Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-23.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = STL)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"STL Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-24.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = BLK)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"BLK Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-25.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = TOV)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"TOV Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-26.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = PF)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"PF Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-27.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = PTS)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"PTS Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-28.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = FG.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FG. Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-29.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = X2P.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"X2P. Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-30.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = X3P.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"X3P. Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 45 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-31.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = FT.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FT. Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-32.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = TS.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"TS. Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-33.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = eFG.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"eFG. Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-34.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Win)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"Win Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-35.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Loss)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"Loss Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-36.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Win.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"Win. Histogram\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-37.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(NBA, aes(x = Champ., y = WS)) +\n  geom_boxplot(fill=\"red\")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + ggtitle(\"Win Shares vs Champ.\") + facet_wrap(~ Champ.)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsum(NBA$Champ.==\"1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 89\n```\n:::\n\n```{.r .cell-code}\nsum(NBA$Champ.==\"0\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 911\n```\n:::\n\n```{.r .cell-code}\nmean(NBA$WS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11.0337\n```\n:::\n\n```{.r .cell-code}\nmedian(NBA$WS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10.3\n```\n:::\n\n```{.r .cell-code}\nsum(NBA$Pos== \"G\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 281\n```\n:::\n\n```{.r .cell-code}\nsum(NBA$Pos== \"F\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 178\n```\n:::\n\n```{.r .cell-code}\nsum(NBA$Pos== \"C\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 133\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}