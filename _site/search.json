[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "John Poehler",
    "section": "",
    "text": "Hello, my name is John Poehler and this is my R portfolio.\nI have recently graduated UNT with a M.S. in advanced Data Analytics and this site will help me showcase my programming abilities in R by way of my Capstone Project named: “Exploring the ‘I’ in Team: Unveiling the Influence of Individual Players on NBA Team Success”."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Portfolio",
    "section": "",
    "text": "Capstone Project: Exploring the ‘I’ in Team: Unveiling the Influence of Individual Players on NBA Team Success\n\n\n\n\n\n\n\n\n\n\n\n\nAug 16, 2023\n\n\nJohn Poehler\n\n\n\n\n\n\n  \n\n\n\n\nLoading, Cleaning, and Wrangling the Data\n\n\n\n\n\n\n\n\n\n\n\n\nAug 17, 2023\n\n\nJohn Poehler\n\n\n\n\n\n\n  \n\n\n\n\nExploratory Data Analysis: EDA\n\n\n\n\n\n\n\n\n\n\n\n\nAug 18, 2023\n\n\nJohn Poehler\n\n\n\n\n\n\n  \n\n\n\n\nModeling the Data\n\n\n\n\n\n\n\n\n\n\n\n\nAug 19, 2023\n\n\nJohn Poehler\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/EDA/index.html",
    "href": "posts/EDA/index.html",
    "title": "Loading, Cleaning, and Wrangling the Data",
    "section": "",
    "text": "First, the load the data!\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nNBA&lt;-read.csv(\"nbastatz1.csv\",header=TRUE)\n\n\n\nNext, it’s time to clean and wrangle the data.\n\nNBA[NBA==\"\"]&lt;-NA\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"G-F\",\"G\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"F-G\",\"F\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"C-F\",\"C\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"F-C\",\"F\")\nNBA$Player[NBA$Player == \"Jos\\xe9 Calder\\xf3n\"]&lt;- \"Jose Calderon\"\nNBA$Player[NBA$Player == \"Manu Gin\\xf3bili\"]&lt;- \"Manu Ginobili\"\nNBA$Player[NBA$Player == \"Hedo T\\xfcrko?lu\"]&lt;- \"Hedo Turkoglu\"\nNBA$Player[NBA$Player == \"Nen\\xea\"]&lt;- \"Nene\""
  },
  {
    "objectID": "posts/Modeling/index.html",
    "href": "posts/Modeling/index.html",
    "title": "Modeling the Data",
    "section": "",
    "text": "suppressMessages(library(dplyr))\nlibrary(dplyr)\nNBA&lt;-read.csv(\"nbastatz1.csv\",header=TRUE)\n\nNBA[NBA==\"\"]&lt;-NA\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"G-F\",\"G\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"F-G\",\"F\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"C-F\",\"C\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"F-C\",\"F\")\nNBA$Player[NBA$Player == \"Jos\\xe9 Calder\\xf3n\"]&lt;- \"Jose Calderon\"\nNBA$Player[NBA$Player == \"Manu Gin\\xf3bili\"]&lt;- \"Manu Ginobili\"\nNBA$Player[NBA$Player == \"Hedo T\\xfcrko?lu\"]&lt;- \"Hedo Turkoglu\"\nNBA$Player[NBA$Player == \"Nen\\xea\"]&lt;- \"Nene\"\n\n\nLet’s build and run a linear regression model!\n\nlibrary(caret)\n\nLoading required package: ggplot2\n\n\nLoading required package: lattice\n\nwin.NBA &lt;- NBA[c('WS','Age','G','MP','FG','FGA','X2P','X2PA','X3P','X3PA','FT','FTA','ORB','DRB','TRB','AST','STL','BLK','TOV','PF','PTS','FG.','X2P.','FT.','TS.','eFG.','Win.')]\n\nset.seed(123)\n\ntrain_index &lt;- createDataPartition(win.NBA$Win., p = 0.7, list = FALSE)\ntrain_data &lt;- win.NBA[train_index, ]\ntest_data &lt;- win.NBA[-train_index, ]\n\n\nwin.percent.regression &lt;- lm(Win. ~ ., data = train_data)\n\n\nsummary(win.percent.regression)\n\n\nCall:\nlm(formula = Win. ~ ., data = train_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.28236 -0.05548  0.00397  0.05699  0.33542 \n\nCoefficients: (4 not defined because of singularities)\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  8.630e-01  2.012e-01   4.289 2.06e-05 ***\nWS           4.148e-02  2.837e-03  14.621  &lt; 2e-16 ***\nAge          3.338e-03  9.789e-04   3.410 0.000689 ***\nG            3.299e-03  9.421e-04   3.502 0.000493 ***\nMP          -1.409e-04  1.984e-05  -7.103 3.10e-12 ***\nFG           4.500e-04  7.081e-04   0.636 0.525301    \nFGA         -3.217e-04  2.681e-04  -1.200 0.230476    \nX2P         -9.625e-04  7.142e-04  -1.348 0.178225    \nX2PA         5.454e-04  2.772e-04   1.968 0.049503 *  \nX3P                 NA         NA      NA       NA    \nX3PA                NA         NA      NA       NA    \nFT          -5.762e-04  2.786e-04  -2.068 0.039024 *  \nFTA          8.909e-05  1.816e-04   0.490 0.623987    \nORB         -4.069e-04  6.862e-05  -5.930 4.84e-09 ***\nDRB         -1.443e-04  3.339e-05  -4.322 1.78e-05 ***\nTRB                 NA         NA      NA       NA    \nAST         -2.539e-04  3.685e-05  -6.890 1.28e-11 ***\nSTL         -3.447e-04  1.130e-04  -3.049 0.002383 ** \nBLK         -1.663e-04  7.498e-05  -2.218 0.026896 *  \nTOV          9.301e-04  1.293e-04   7.195 1.66e-12 ***\nPF          -6.414e-05  9.297e-05  -0.690 0.490476    \nPTS                 NA         NA      NA       NA    \nFG.         -4.855e-01  5.065e-01  -0.959 0.338086    \nX2P.         1.310e+00  4.842e-01   2.704 0.007014 ** \nFT.          2.455e-02  1.288e-01   0.191 0.848943    \nTS.         -9.870e-01  7.467e-01  -1.322 0.186666    \neFG.        -4.009e-01  7.866e-01  -0.510 0.610491    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.08659 on 678 degrees of freedom\nMultiple R-squared:  0.3635,    Adjusted R-squared:  0.3428 \nF-statistic:  17.6 on 22 and 678 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nNow, a logistic regression model!\n\nlibrary(dplyr)\nlibrary(caret)\n\nindyNBA&lt;- NBA[c('WS','Age','G','MP','FG','FGA','X2P','X2PA','X3P','X3PA','FT','FTA','ORB','DRB','TRB','AST','STL','BLK','TOV','PF','PTS','FG.','X2P.','X3P.','FT.','TS.','eFG.','Champ.')]\n\nset.seed(123)\n\nindex &lt;- createDataPartition(indyNBA$Champ., p = 0.7, list = FALSE)\n\ntrain &lt;- indyNBA[index, ]\ntest &lt;- indyNBA[-index, ]\n\nlogit_model &lt;- glm(Champ. ~ WS + MP +DRB + AST + STL +\n                   TOV ,\n                   data = train, family = binomial)\n\nsummary(logit_model)\n\n\nCall:\nglm(formula = Champ. ~ WS + MP + DRB + AST + STL + TOV, family = binomial, \n    data = train)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.9818  -0.4455  -0.3274  -0.2438   2.6761  \n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -0.2115528  1.0080328  -0.210    0.834    \nWS           0.3731998  0.0707348   5.276 1.32e-07 ***\nMP          -0.0020999  0.0004737  -4.433 9.31e-06 ***\nDRB         -0.0008053  0.0010494  -0.767    0.443    \nAST         -0.0002387  0.0010324  -0.231    0.817    \nSTL          0.0002486  0.0043261   0.057    0.954    \nTOV         -0.0015962  0.0033557  -0.476    0.634    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 414.23  on 699  degrees of freedom\nResidual deviance: 372.35  on 693  degrees of freedom\nAIC: 386.35\n\nNumber of Fisher Scoring iterations: 6\n\ntest$predicted_champ &lt;- predict(logit_model, newdata = test, type = \"response\")\n\ntest$predicted_champ_binary &lt;- ifelse(test$predicted_champ &gt;= 0.5, \"yes\", \"no\")\n\nconfusion_matrix &lt;- table(test$Champ., test$predicted_champ_binary)\nprint(confusion_matrix)\n\n   \n     no yes\n  0 269   3\n  1  26   2\n\naccuracy &lt;- sum(diag(confusion_matrix)) / sum(confusion_matrix)\nprint(paste(\"Accuracy:\", accuracy))\n\n[1] \"Accuracy: 0.903333333333333\"\n\n\n\n\nLastly, a LASSO Regression model!\n\nlibrary(glmnet)\n\nLoading required package: Matrix\n\n\nLoaded glmnet 4.1-7\n\nlibrary(caret)\nlibrary(caTools)\n\n\nsubsetNBA &lt;- select(NBA, WS, Age, G, MP, FG, FGA, X2P, X2PA, X3P, X3PA, FT, FTA, ORB, DRB, TRB, AST, STL, BLK, TOV, PF, PTS, `FG.`, `X2P.`, `FT.`, `TS.`, `eFG.`)\n\n\nset.seed(345)  \nsample &lt;- sample.split(subsetNBA$WS, SplitRatio = 0.70)\ntrain &lt;- subsetNBA[sample, ]\ntest &lt;- subsetNBA[!sample, ]\n\n\nx &lt;- as.matrix(train[, -1])  \ny &lt;- train$WS\n\nlasso_model &lt;- glmnet(x, y, alpha = 1)  \n\nlambda_seq &lt;- exp(seq(log(0.01), log(1), length = 100))  \n\n\ncv_model &lt;- cv.glmnet(x, y, alpha = 1, lambda = lambda_seq)\n\n\nopt_lambda &lt;- cv_model$lambda.min\n\n\ncat(\"Optimal Lambda:\", opt_lambda, \"\\n\")\n\nOptimal Lambda: 0.01 \n\nfinal_model &lt;- glmnet(x, y, alpha = 1, lambda = opt_lambda)\n\n\nx_test &lt;- as.matrix(test[, -1])  \ny_test_pred &lt;- predict(final_model, newx = x_test)\n\n\n\nrmse &lt;- sqrt(mean((y_test_pred - test$WS)^2))\ncat(\"RMSE:\", rmse, \"\\n\")\n\nRMSE: 1.184433 \n\ncoef &lt;- coef(final_model)\nprint(coef)\n\n26 x 1 sparse Matrix of class \"dgCMatrix\"\n                       s0\n(Intercept) -1.357012e+01\nAge          1.287144e-02\nG            2.939427e-02\nMP           8.805988e-04\nFG           .           \nFGA         -1.688196e-03\nX2P          .           \nX2PA         .           \nX3P          1.048170e-03\nX3PA         .           \nFT           .           \nFTA          3.369140e-03\nORB          .           \nDRB          1.358432e-03\nTRB          2.883530e-03\nAST          6.304786e-03\nSTL          1.302799e-02\nBLK          8.091929e-03\nTOV         -2.051693e-02\nPF          -4.534926e-03\nPTS          3.951640e-03\nFG.          .           \nX2P.        -5.387480e+00\nFT.          .           \nTS.          2.349976e+01\neFG.         2.553410e+00\n\nsummary(final_model)\n\n          Length Class     Mode   \na0         1     -none-    numeric\nbeta      25     dgCMatrix S4     \ndf         1     -none-    numeric\ndim        2     -none-    numeric\nlambda     1     -none-    numeric\ndev.ratio  1     -none-    numeric\nnulldev    1     -none-    numeric\nnpasses    1     -none-    numeric\njerr       1     -none-    numeric\noffset     1     -none-    logical\ncall       5     -none-    call   \nnobs       1     -none-    numeric"
  },
  {
    "objectID": "posts/my first post/index.html",
    "href": "posts/my first post/index.html",
    "title": "Exploratory Data Analysis: EDA",
    "section": "",
    "text": "suppressMessages(library(dplyr))\nlibrary(dplyr)\nNBA&lt;-read.csv(\"nbastatz1.csv\",header=TRUE)\n\n\nNBA[NBA==\"\"]&lt;-NA\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"G-F\",\"G\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"F-G\",\"F\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"C-F\",\"C\")\nNBA$Pos &lt;- replace(NBA$Pos,NBA$Pos == \"F-C\",\"F\")\nNBA$Player[NBA$Player == \"Jos\\xe9 Calder\\xf3n\"]&lt;- \"Jose Calderon\"\nNBA$Player[NBA$Player == \"Manu Gin\\xf3bili\"]&lt;- \"Manu Ginobili\"\nNBA$Player[NBA$Player == \"Hedo T\\xfcrko?lu\"]&lt;- \"Hedo Turkoglu\"\nNBA$Player[NBA$Player == \"Nen\\xea\"]&lt;- \"Nene\"\n\n\nNow, we’ll check the for the correlation between the variables.\n\nnumNBA&lt;- NBA[c('WS','Age','G','MP','FG','FGA','X2P','X2PA','X3P','X3PA','FT','FTA','ORB','DRB','TRB','AST','STL','BLK','TOV','PF','PTS','FG.','X2P.','X3P.','FT.','TS.','eFG.','Win.','Win','Loss','Champ.')]\nlibrary(reshape2)\ncorrelation_matrix&lt;-round(cor(numNBA),2)\nmelt_corr_mat&lt;-melt(correlation_matrix)\nlibrary(ggplot2)\nggplot(data = melt_corr_mat, aes(x=Var1, y=Var2, fill= value)) + geom_tile(width= 1, colour = \"white\") + \n  scale_fill_gradient(low = \"white\", high = \"steelblue\")+geom_text(aes(Var2, Var1, label = value),\n          color = \"black\", size = 2) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + ggtitle(\"Numeric Variable Heat Map\")\n\n\n\n\n\n\nIt’s time for some Exploratory Data Analysis!\n\nggplot(NBA, aes(x = WS)) + geom_histogram(color=\"black\",fill=\"purple\")+ geom_vline(aes(xintercept = min(WS)), color = \"red\") +\n  geom_vline(aes(xintercept = max(WS)), color = \"green\")+ geom_vline(aes(xintercept = mean(WS)), color = \"yellow\") + geom_vline(aes(xintercept = median(WS)), color = \"blue\")+\n    ggtitle(\"Win Shares Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = Pos, y = WS)) + geom_boxplot(fill=\"purple\")+ ggtitle(\"Win Shares vs Position\")\n\n\n\nggplot(NBA, aes(x = Team, y = WS)) + geom_boxplot(fill=\"red\")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5))\n\n\n\nteam_counts &lt;- NBA %&gt;%\n  group_by(Team) %&gt;%\n  summarise(count = n()) %&gt;%\n  arrange(desc(count))\n\nggplot(team_counts, aes(x = reorder(Team, -count), y = count)) + geom_bar(stat = \"identity\", fill = \"blue\", color = \"black\") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + ggtitle(\"Count of Top 1000 per Team\")\n\n\n\nteam_mean_win_shares &lt;- NBA %&gt;%\n  group_by(Team) %&gt;%\n  summarise(mean_win_shares = mean(WS)) %&gt;%\n  arrange(desc(mean_win_shares))\nggplot(team_mean_win_shares, aes(x = reorder(Team, -mean_win_shares), y = mean_win_shares)) +\n  geom_bar(stat = \"identity\", fill = \"#66FF99\", color = \"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win Shares per Team\")\n\n\n\nggplot(NBA, aes(x = Team, y = WS)) +\n  stat_summary(fun = mean, geom = \"bar\", fill = \"#66FF99\", color=\"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of WS per Team\") \n\n\n\n\n\nggplot(NBA, aes(x = Season)) +\n  geom_bar(color= \"black\" ,fill=\"purple\") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+ ggtitle(\"Win Shares vs Season\")\n\n\n\nbestNBA &lt;- NBA[NBA$Player %in% c(\"Karl Malone\", \"Chris Paul\", \"LeBron James\", \"John Stockton\", \"Tim Duncan\", \"Hakeem Olajuwon\", \"Reggie Miller\", \"Charles Barkley\", \"Dirk Nowitzki\", \"Kobe Bryant\", \"David Robinson\", \"Kevin Garnett\", \"Magic Johnson\", \"Michael Jordan\", \"Moses Malone\", \"Damian Lillard\", \"Gary Payton\", \"James Harden\"), ]\n\nplayer_counts &lt;- bestNBA %&gt;%\n  group_by(Player) %&gt;%\n  summarise(count = n()) %&gt;%\n  arrange(desc(count))\n\nggplot(player_counts, aes(x = reorder(Player, -count), y = count)) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"556B2F\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Number of Appearances vs Player\")\n\n\n\n  ggplot(bestNBA, aes(x = Player)) +\n  geom_bar(color= \"black\" ,fill=\"556B2F\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Win Shares vs Player\")\n\n\n\n  player_mean_win_shares &lt;- bestNBA %&gt;%\n  group_by(Player) %&gt;%\n  summarise(mean_win_shares = mean(WS)) %&gt;%\n  arrange(desc(mean_win_shares))\n\nbestNBA &lt;- merge(bestNBA, player_mean_win_shares, by = \"Player\")\n\nggplot(bestNBA, aes(x = reorder(Player, -mean_win_shares), y = WS)) +\n  geom_boxplot(fill = \"red\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Win Shares vs Player\")\n\n\n\nggplot(bestNBA, aes(x = Player, y = WS)) +\n  geom_boxplot(fill=\"red\")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + ggtitle(\"Win Shares vs Player\")\n\n\n\nggplot(NBA, aes(x = Win.)) + geom_histogram(color=\"black\",fill=\"#99CC33\")+ geom_vline(aes(xintercept = min(Win.)), color = \"red\") +\n  geom_vline(aes(xintercept = max(Win.)), color = \"green\")+ geom_vline(aes(xintercept = mean(Win.)), color = \"yellow\") + geom_vline(aes(xintercept = median(Win.)), color = \"blue\")+\n    ggtitle(\"Win% Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nteam_mean_win_percent &lt;- NBA %&gt;%\n  group_by(Team) %&gt;%\n  summarise(mean_win_percent = mean(Win.)) %&gt;%\n  arrange(desc(mean_win_percent))\n\nggplot(team_mean_win_percent, aes(x = reorder(Team, -mean_win_percent), y = mean_win_percent)) +\n  geom_bar(stat = \"identity\", fill = \"#cc6600\", color = \"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win% per Team\")\n\n\n\nggplot(NBA, aes(x = Team, y = Win.)) +\n  stat_summary(fun = mean, geom = \"bar\", fill = \"#cc6600\", color=\"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win% per Team\") \n\n\n\nplayer_mean_win_percent &lt;- bestNBA %&gt;%\n  group_by(Player) %&gt;%\n  summarise(mean_win_percent = mean(Win.)) %&gt;%\n  arrange(desc(mean_win_percent))\nggplot(player_mean_win_percent, aes(x = reorder(Player, -mean_win_percent), y = mean_win_percent)) +\n  geom_bar(stat = \"identity\", fill = \"#cc6600\", color = \"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win% per Player\")\n\n\n\nggplot(bestNBA, aes(x = Player, y = Win.)) +\n  stat_summary(fun = mean, geom = \"bar\", fill = \"#cc6600\", color=\"black\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  ggtitle(\"Mean of Win% per Player\") \n\n\n\nggplot(NBA, aes(x = MP)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ geom_vline(aes(xintercept = min(MP)), color = \"red\") +\n  geom_vline(aes(xintercept = max(MP)), color = \"green\")+ geom_vline(aes(xintercept = mean(MP)), color = \"yellow\") + geom_vline(aes(xintercept = median(MP)), color = \"blue\")+\n    ggtitle(\"MP Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = FG)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ geom_vline(aes(xintercept = min(FG)), color = \"red\") +\n  geom_vline(aes(xintercept = max(FG)), color = \"green\")+ geom_vline(aes(xintercept = mean(FG)), color = \"yellow\") + geom_vline(aes(xintercept = median(FG)), color = \"blue\")+\n    ggtitle(\"FGA Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = FGA)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FGA Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = X2P)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"2P Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = X2PA)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"2PA Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = X3P)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"3P Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = X3PA)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"3PA Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = FT)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FT Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = FTA)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FTA Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = ORB)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"ORB Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = DRB)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"DRB Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = TRB)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"TRB Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = AST)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"AST Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = STL)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"STL Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = BLK)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"BLK Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = TOV)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"TOV Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = PF)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"PF Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = PTS)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"PTS Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = FG.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FG. Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = X2P.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"X2P. Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = X3P.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"X3P. Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 45 rows containing non-finite values (`stat_bin()`).\n\n\n\n\nggplot(NBA, aes(x = FT.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"FT. Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = TS.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"TS. Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = eFG.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"eFG. Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = Win)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"Win Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = Loss)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"Loss Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggplot(NBA, aes(x = Win.)) + geom_histogram(color=\"black\",fill=\"#CCFFCC\")+ggtitle(\"Win. Histogram\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nggplot(NBA, aes(x = Champ., y = WS)) +\n  geom_boxplot(fill=\"red\")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + ggtitle(\"Win Shares vs Champ.\") + facet_wrap(~ Champ.)\n\n\n\nsum(NBA$Champ.==\"1\")\n\n[1] 89\n\nsum(NBA$Champ.==\"0\")\n\n[1] 911\n\nmean(NBA$WS)\n\n[1] 11.0337\n\nmedian(NBA$WS)\n\n[1] 10.3\n\nsum(NBA$Pos== \"G\")\n\n[1] 281\n\nsum(NBA$Pos== \"F\")\n\n[1] 178\n\nsum(NBA$Pos== \"C\")\n\n[1] 133"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Capstone Project: Exploring the ‘I’ in Team: Unveiling the Influence of Individual Players on NBA Team Success",
    "section": "",
    "text": "The following Capstone Project was created during my final semester at UNT and was done to showcase my ability with R as a programming language as well as show my understanding of data cleaning, wrangling, visualization as well as modelling.\nWorking with data revolving around NBA statistics, my goal was investigate the effect that individual players had on the overall success of their entire team."
  }
]